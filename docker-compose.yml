# Copyright (c) 2025 University College London Hospitals NHS Foundation Trust

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
################################################################################

################################################################################
# Common
x-http-proxy: &http-proxy ${HTTP_PROXY}
x-https-proxy: &https-proxy ${HTTPS_PROXY}
x-no-proxy: &no-proxy localhost,0.0.0.0,127.0.0.1,uclvlddpragae02,ocr-forwarding-api,sparrow,sparrow-ocr,marker,paddleocr,docling
x-proxy-common: &proxy-common
  HTTP_PROXY: *http-proxy
  http_proxy: *http-proxy
  HTTPS_PROXY: *https-proxy
  https_proxy: *https-proxy
  NO_PROXY: *no-proxy
  no_proxy: *no-proxy

x-build-args-common: &build-args-common
  <<: [*proxy-common]

x-common-env: &common-env
  DEBUG: ${DEBUG}
  LOG_LEVEL: ${LOG_LEVEL}
  TZ: ${TZ:-Europe/London}

networks:
  pyonb_ocr_api:
    driver: bridge

################################################################################
# Services
services:
  sparrow:
    profiles: [sparrow]
    build:
      context: src/ocr/sparrow
      dockerfile: Dockerfile
      args:
        <<: *build-args-common
        SPARROW_API_PORT: ${SPARROW_API_PORT}
    environment:
      <<: [*proxy-common, *common-env]
      CONTAINER_DATA_FOLDER: /data
      SPARROW_API_PORT: ${SPARROW_API_PORT}
    env_file:
      - ./.env
    ports:
      - "${SPARROW_API_PORT}:${SPARROW_API_PORT}"
    volumes:
      - ${HOST_DATA_FOLDER}:${CONTAINER_DATA_FOLDER:-/data}
    networks:
      - pyonb_ocr_api
    healthcheck:
      test: ["CMD", "curl", "-X", "GET", "http://localhost:${SPARROW_API_PORT}"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  marker:
    profiles: [marker]
    build:
      context: src/ocr/marker
      dockerfile: Dockerfile
      args:
        <<: *build-args-common
        MARKER_API_PORT: ${MARKER_API_PORT}
    environment:
      <<: [*proxy-common, *common-env]
      CONTAINER_DATA_FOLDER: /data
      MARKER_API_PORT: ${MARKER_API_PORT}
    env_file:
      - ./.env
    ports:
      - "${MARKER_API_PORT}:${MARKER_API_PORT}"
    volumes:
      - ${HOST_DATA_FOLDER}:${CONTAINER_DATA_FOLDER:-/data}
    networks:
      - pyonb_ocr_api
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-X",
          "GET",
          "http://localhost:${MARKER_API_PORT}/health",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  paddleocr:
    profiles: [paddleocr]
    build:
      context: src/ocr/paddleocr
      dockerfile: Dockerfile
      args:
        <<: *build-args-common
        PADDLEOCR_API_PORT: ${PADDLEOCR_API_PORT}
    environment:
      <<: [*proxy-common, *common-env]
      CONTAINER_DATA_FOLDER: /data
      PADDLEOCR_API_PORT: ${PADDLEOCR_API_PORT}
    env_file:
      - ./.env
    ports:
      - "${PADDLEOCR_API_PORT}:${PADDLEOCR_API_PORT}"
    volumes:
      - ${HOST_DATA_FOLDER}:${CONTAINER_DATA_FOLDER:-/data}
    networks:
      - pyonb_ocr_api
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-X",
          "GET",
          "http://localhost:${PADDLEOCR_API_PORT}/health",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  docling:
    profiles: [docling]
    build:
      context: packages/ocr/docling
      dockerfile: Dockerfile
      args:
        <<: *build-args-common
        DOCLING_API_PORT: ${DOCLING_API_PORT}
    environment:
      <<: [*proxy-common, *common-env]
      DATA_FOLDER: /data
      DOCLING_API_PORT: ${DOCLING_API_PORT}
    env_file:
      - ./.env
    ports:
      - "${DOCLING_API_PORT}:${DOCLING_API_PORT}"
    volumes:
      - ${PWD}/${DATA_FOLDER}:/data
    networks:
      - pyonb_ocr_api
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-X",
          "GET",
          "http://localhost:${DOCLING_API_PORT}/health",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  kreuzberg:
    profiles: [kreuzberg]
    build:
      context: packages/ocr/kreuzberg
      dockerfile: Dockerfile
      args:
        <<: *build-args-common
        KREUZBERG_API_PORT: ${KREUZBERG_API_PORT}
    environment:
      <<: [*proxy-common, *common-env]
      DATA_FOLDER: /data
      KREUZBERG_API_PORT: ${KREUZBERG_API_PORT}
    env_file:
      - ./.env
    ports:
      - "${KREUZBERG_API_PORT}:${KREUZBERG_API_PORT}"
    volumes:
      - ${PWD}/${DATA_FOLDER}:/data
    networks:
      - pyonb_ocr_api
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-X",
          "GET",
          "http://localhost:${KREUZBERG_API_PORT}/health",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  ocr-forwarding-api:
    build:
      context: src/api
      dockerfile: Dockerfile
      args:
        <<: *build-args-common
        OCR_FORWARDING_API_PORT: ${OCR_FORWARDING_API_PORT}
    environment:
      <<: [*proxy-common, *common-env]
      CONTAINER_DATA_FOLDER: /data
      OCR_FORWARDING_API_PORT: ${OCR_FORWARDING_API_PORT}
    env_file:
      - ./.env
    ports:
      - "${OCR_FORWARDING_API_PORT}:${OCR_FORWARDING_API_PORT}"
    volumes:
      - ./src/api/app:/app
      - ${HOST_DATA_FOLDER}:${CONTAINER_DATA_FOLDER:-/data}
    networks:
      - pyonb_ocr_api
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-X",
          "GET",
          "http://localhost:${OCR_FORWARDING_API_PORT}/",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
